import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.context.junit.jupiter.SpringExtension;
org.junit.jupiter.api.Assertions.assertTrue(true);
org.junit.jupiter.api.Assertions.assertTrue(true, "msg");
org.junit.jupiter.api.Assertions.assertTrue(foo().and(bar(3)), "msg");
org.junit.jupiter.api.Assertions.assertTrue("hello, world".equals("hello, world"), "this" + "that )(");
org.junit.jupiter.api.Assertions.assertTrue("hello, world".equals("hello, world"), "\"hello, world\".equals(\"hello, world\")");
org.junit.jupiter.api.Assertions.assertTrue(true, "msg" + getSomething());
org.junit.jupiter.api.Assertions.assertTrue(true, "esc\\"escesc\\\\\\"end");
org.junit.jupiter.api.Assertions.assertTrue(true, "msg" /*****/);
org.junit.jupiter.api.Assertions.assertTrue("msg", method(
    ));
org.junit.jupiter.api.Assertions.assertTrue("msg", // true);
    foo);
org.junit.jupiter.api.Assertions.assertTrue("msg", /* true);
    */ foo);
org.junit.jupiter.api.Assertions.assertFalse(false, "msg");
org.junit.jupiter.api.Assertions.assertEquals("expected", "actual", "msg");
org.junit.jupiter.api.Assertions.assertEquals("expected", "actual");
org.junit.jupiter.api.Assertions.assertEquals(/* comment, inline */"expected", "actual", "msg, important");//comment, trailing
org.junit.jupiter.api.Assertions.assertEquals(/* comment, inline */"expected", "actual", "msg, important");/* comment,
trailing */
org.junit.jupiter.api.Assertions.assertNotEquals("expected", "actual");
org.junit.jupiter.api.Assertions.assertNotEquals("expected", "actual", "msg");
org.junit.jupiter.api.Assertions.assertNull(value);
org.junit.jupiter.api.Assertions.assertNotNull(value);
org.junit.jupiter.api.Assertions.assertNull(value, "message");
org.junit.jupiter.api.Assertions.assertNotNull(value, "message");
org.junit.jupiter.api.Assertions.assertEquals(2 , fooDAO.findFoo(obj.get().getId()).size(), "Expect 2 record " );
@org.junit.ClassRule // see org.junit.jupiter.api.extension.ExtendWith
